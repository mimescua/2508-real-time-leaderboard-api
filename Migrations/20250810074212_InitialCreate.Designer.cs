// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SafeProjectName.DataAccess;

#nullable disable

namespace _2508_real_time_leaderboard_api.Migrations
{
    [DbContext(typeof(LeaderBoardDbContext))]
    [Migration("20250810074212_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SafeProjectName.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<string>("About")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Genres")
                        .HasColumnType("int");

                    b.Property<string>("Platforms")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GameId");

                    b.ToTable("games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            About = "An action-adventure game set in the fantasy land of Hyrule.",
                            Genres = 331,
                            Platforms = "Nintendo 64, GameCube, iQue player",
                            ReleaseDate = new DateTime(1998, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Legend of Zelda: Ocarina of Time"
                        },
                        new
                        {
                            GameId = 2,
                            About = "An open-world action-adventure game set in the fictional state of San Andreas.",
                            Genres = 3459,
                            Platforms = "PlayStation 3, PlayStation 4, PlayStation 5, Xbox 360, Xbox One, PC",
                            ReleaseDate = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Grand Theft Auto V"
                        });
                });

            modelBuilder.Entity("SafeProjectName.Models.Score", b =>
                {
                    b.Property<int>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScoreId"));

                    b.Property<DateTime>("AchievedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ScoreId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId", "GameId")
                        .IsUnique();

                    b.ToTable("scores");

                    b.HasData(
                        new
                        {
                            ScoreId = 1,
                            AchievedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 1,
                            UserId = 1,
                            Value = 100
                        },
                        new
                        {
                            ScoreId = 2,
                            AchievedAt = new DateTime(2025, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 2,
                            UserId = 1,
                            Value = 900
                        },
                        new
                        {
                            ScoreId = 3,
                            AchievedAt = new DateTime(2025, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 2,
                            UserId = 2,
                            Value = 600
                        });
                });

            modelBuilder.Entity("SafeProjectName.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("nvarchar(72)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@leaderboard.com",
                            Password = "admin123",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2024, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@leaderboard.com",
                            Password = "user123",
                            Username = "user1"
                        });
                });

            modelBuilder.Entity("SafeProjectName.Models.Score", b =>
                {
                    b.HasOne("SafeProjectName.Models.Game", "Game")
                        .WithMany("Scores")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafeProjectName.Models.User", "User")
                        .WithMany("Scores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SafeProjectName.Models.Game", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("SafeProjectName.Models.User", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
